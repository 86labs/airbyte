name: Sonar Scan
on:
  push:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.detect-changed-modules.outputs.changes }}
    steps:
    - id: detect-changed-modules

      run: |
         CHANGES="[{\"module\":\"connectors/source-s3\",\"lang\":\"py\", \"folder\":\"path1\"},{\"module\":\"connectors/destination-s3\",\"lang\":\"java\", \"folder\":\"path2\"}]"
         echo "::set-output name=changes::{ \"include\": $CHANGES }"
  run-ci-tests:
    needs: detect-changes
    name:  Run CI tests for ${{ matrix.module }}
    runs-on: ubuntu-latest
    environment: more-secrets
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.changes)}}
    env:
      MODULE_NAME: ${{ matrix.module }}
      MODULE_LANG: ${{ matrix.lang }}
      MODULE_FOLDER: ${{ matrix.folder }}
      ENV_NAME: "github"

#    env:
#      MODULE_NAME: connectors/source-s3
#      MODULE_LANG: py
#      MODULE_FOLDER: "path2"
#      ENV_NAME: "local"

    steps:
    - name: Print Settings
      run: |
         echo "Module: ${{ env.MODULE_NAME }}, Lang: ${{ env.MODULE_LANG }}, Folder: ${{ env.MODULE_FOLDER }}"
    - name: Do something for Java
      if: ${{ env.MODULE_LANG == 'java' }}
      run: echo "this is JAVA"
    - name: Do something for Python
      if: ${{ env.MODULE_LANG == 'py' }}
      run: echo "this is Python"
    - name: Do something for Python
      if: ${{ env.ENV_NAME == 'github' }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
##      - uses: sonarsource/sonarqube-scan-action@master
##        with:
##          projectBaseDir: airbyte-integrations/connectors
##          # -Dsonar.tests=.
##          # -Dsonar.test.inclusions=**/unit_tests/**
##          args: >
##            -Dsonar.projectKey=airbite-python-connectors
##            -Dsonar.exclusions=**/*.java
##            -Dsonar.verbose=true
##            -Dsonar.language=py
##            -Dsonar.sourceEncoding=UTF-8
##        env:
##          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
##          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#
#        # If you wish to fail your job when the Quality Gate is red, uncomment the
#        # following lines. This would typically be used to fail a deployment.
#        # - uses: sonarsource/sonarqube-quality-gate-action@master
#        #   timeout-minutes: 5
#        #   env:
#        #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#
