name: Sonar Scan
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.detect-changed-modules.outputs.changes }}
    steps:
    - id: detect-changed-modules
      run: |
         CHANGES="[{\"module\":\"connectors/source-file\",\"lang\":\"py\", \"folder\":\"airbyte-integrations/connectors/source-file/\"}, {\"module\":\"connectors/source-s3\",\"lang\":\"py\", \"folder\":\"airbyte-integrations/connectors/source-s3/\"},{\"module\":\"connectors/destination-s3\",\"lang\":\"java\", \"folder\":\"airbyte-integrations/connectors/destination-s3/\"}]"
         echo "::set-output name=changes::{ \"include\": $CHANGES }"

  run-ci-tests:
    needs: detect-changes
    name:  Run tests for ${{ matrix.module }}
    runs-on: ubuntu-latest
    environment: more-secrets
    # this option must be uncommented for github env
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.changes)}}
    env:
      MODULE_NAME: ${{ matrix.module }}
      MODULE_LANG: ${{ matrix.lang }}
      MODULE_FOLDER: ${{ matrix.folder }}
      ENV_NAME: "github"
#    # these for local dev
#    env:
#      MODULE_NAME: connectors/source-s3
#      MODULE_LANG: py
#      MODULE_FOLDER: "path2"
#      ENV_NAME: "local"

    steps:
    - name: Print Settings
      run: |
         echo "Module: ${{ env.MODULE_NAME }}, Lang: ${{ env.MODULE_LANG }}, Folder: ${{ env.MODULE_FOLDER }}"
    - name: Checkout Airbyte
      if: ${{ env.ENV_NAME == 'github' }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Auth with gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SONAR_SA_KEY }}
        project_id: dataline-integration-testing
        export_default_credentials: true

    - name: Create IAP tunnel to the SonarQube VM
      shell: bash
      run: gcloud compute start-iap-tunnel sonarqube-1-vm 80 --local-host-port=localhost:3300 --zone=europe-central2-a --project dataline-integration-testing &

    - name: Run Tests Runner
      id: run-python-tests
      uses: ./.github/actions/ci-tests-runner
      with:
        module-name: ${{ env.MODULE_NAME }}
        module-folder: ${{ env.MODULE_FOLDER }}
        module-lang: ${{ env.MODULE_LANG }}
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        sonar-host: "http://localhost:3300"
        pull-request-id: "${{ github.repository }}/${{ github.event.pull_request.number }}"
        remove-sonar-project: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}

    - name: Remove IAP tunnel
      shell: bash
      run: |-
        kill %1
